TITLE CHARACTER CHECK (.EXE MODEL/FORMAT)
;---------------------------------------------
STACKSEG SEGMENT PARA 'Stack'
STACKSEG ENDS
;---------------------------------------------
DATASEG SEGMENT PARA 'Data'
  UPPER_REF1 DB "A", "$"
  UPPER_REF2 DB "Z", "$"
  LOWER_REF1 DB "a", "$"
  LOWER_REF2 DB "z", "$"
  DIGIT_REF1 DB "0", "$"
  DIGIT_REF2 DB "9", "$"
  INPUT1 DB ?, 0ah, 0dh,"$"
  STRING_UPPER DB "Uppercase Letter$"
  STRING_LOWER DB "Lowercase Letter$"
  STRING_DIGIT DB "Digit$"
  STRING_SPECIAL DB "Special Character$"
  MESSAGE DB "Enter Character: $"
DATASEG ENDS
;---------------------------------------------
CODESEG SEGMENT PARA 'Code'
  ASSUME SS:STACKSEG, DS:DATASEG, CS:CODESEG
START:
  ;set DS correctly
  MOV AX, DATASEG
  MOV DS, AX

  MOV AH, 09
  LEA DX, MESSAGE
  6

  ;display input
  MOV AH, 09
  LEA DX, INPUT1
  INT 21H

; DIGIT CHECKING
DIGIT_CHECK:
  CMP AL, DIGIT_REF1
  JB IS_SPECIAL
  CMP AL, DIGIT_REF2
  JA UPPER_CHECK
  JMP IS_DIGIT

; UPPER CASE CHECKING
UPPER_CHECK:
  CMP AL, UPPER_REF1
  JB IS_SPECIAL
  CMP AL, UPPER_REF2
  JA LOWER_CHECK
  JMP IS_UPPER

; LOWER CASE CHECKING
LOWER_CHECK:
  CMP AL, LOWER_REF1
  JB IS_SPECIAL
  CMP AL, LOWER_REF2
  JA IS_SPECIAL
  JMP IS_LOWER

IS_DIGIT:
  MOV AH, 09
  LEA DX, STRING_DIGIT
  INT 21H
  JMP EXIT

IS_UPPER:
  MOV AH, 09
  LEA DX, STRING_UPPER
  INT 21H
  JMP EXIT

IS_LOWER:
  MOV AH, 09
  LEA DX, STRING_LOWER
  INT 21H
  JMP EXIT

IS_SPECIAL:
  MOV AH, 09
  LEA DX, STRING_SPECIAL
  INT 21H
  JMP EXIT

EXIT:
  ;return/terminate/exit
  MOV AH, 4CH
  INT 21H
CODESEG ENDS
END START
